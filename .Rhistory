gsub(".", '', flnclip@data[,36], fixed = T)
gsub(".", '', flnclip@data[,36], fixed = T)
as.numeric(gsub(".", '', flnclip@data[,36], fixed = T))
flnclip <- intersect(fln, kreise)
# replace , with . and save as numeric
for(i in seq(15)){
flnclip@data[,29+i] <- gsub(".", '', flnclip@data[,29+i], fixed = T)
flnclip@data[,29+i] <- as.numeric(gsub(",", '.', flnclip@data[,29+i], fixed = T))
}
flnclip@data[,36]
## LANDWIRTSCHAFT
lws <- readOGR(paste0(main, "GemHe_LWS.shp"))
lwsclip <- intersect(lws, kreise)
# replace , with . and save as numeric
for(i in seq(31)){
lwsclip@data[,29+i] <- gsub(".", '', lwsclip@data[,29+i], fixed = T)
lwsclip@data[,29+i] <- as.numeric(gsub(",", '.', lwsclip@data[,29+i], fixed = T))
}
# which are smaller than smallest Gemeinde?
pos <- which(area(lwsclip)<area(lwsclip[lwsclip$GEN_G=="Heuchelheim",]))
realclip <- lwsclip[is.na(match(seq(nrow(lwsclip)), pos)),]
writeOGR(realclip, dsn=paste0(opp, "GemHe_LWS_mh.shp"), driver="ESRI Shapefile",
layer="GemHe_LWS_mh", overwrite=T)
## LANDWIRTSCHAFT
lws <- readOGR(paste0(main, "GemHe_LWS.shp"))
lwsclip <- intersect(lws, kreise)
# replace , with . and save as numeric
for(i in seq(31)){
lwsclip@data[,29+i] <- gsub(".", '', lwsclip@data[,29+i], fixed = T)
lwsclip@data[,29+i] <- as.numeric(gsub(",", '.', lwsclip@data[,29+i], fixed = T))
}
# which are smaller than smallest Gemeinde?
pos <- which(area(lwsclip)<area(lwsclip[lwsclip$GEN_G=="Heuchelheim",]))
realclip <- lwsclip[is.na(match(seq(nrow(lwsclip)), pos)),]
writeOGR(realclip, dsn=paste0(opp, "GemHe_LWS_mh.shp"), driver="ESRI Shapefile",
layer="GemHe_LWS_mh", overwrite=T)
## FLÄCHENNUTZUNG
fln <- readOGR(paste0(main, "GemHe_Flaechennutzung.shp"))
flnclip <- intersect(fln, kreise)
# replace , with . and save as numeric
for(i in seq(15)){
flnclip@data[,29+i] <- gsub(".", '', flnclip@data[,29+i], fixed = T)
flnclip@data[,29+i] <- as.numeric(gsub(",", '.', flnclip@data[,29+i], fixed = T))
}
# which are smaller than smallest Gemeinde?
pos <- which(area(flnclip)<area(flnclip[flnclip$GEN_G=="Heuchelheim",]))
realclip <- flnclip[is.na(match(seq(nrow(flnclip)), pos)),]
writeOGR(realclip, dsn=paste0(opp, "GemHe_Flaechennutzung_mh.shp"), driver="ESRI Shapefile",
layer="GemHe_Flaechennutzung_mh", overwrite=T)
## BESCHÄFTIGTE
bes <- readOGR(paste0(main, "GemHe_Beschaeftigte.shp"))
besclip <- intersect(bes, kreise)
# replace , with . and save as numeric
for(i in seq(6)){
besclip@data[,29+i] <- gsub(".", '', besclip@data[,29+i], fixed = T)
besclip@data[,29+i] <- as.numeric(gsub(",", '.', besclip@data[,29+i], fixed = T))
}
besclip@data[,36:42] <- NULL
# which are smaller than smallest Gemeinde?
pos <- which(area(besclip)<area(besclip[besclip$GEN_G=="Heuchelheim",]))
realclip <- besclip[is.na(match(seq(nrow(besclip)), pos)),]
writeOGR(realclip, dsn=paste0(opp, "GemHe_Beschaeftigte_mh.shp"), driver="ESRI Shapefile",
layer="GemHe_Beschaeftigte_mh", overwrite=T)
# BEVÖLKERUNG
path <- "C:/Users/mleza/Documents/Jobs/BioMan/Variablen/HessischeGemeindestatistik/"
gem_he_path <- "C:/Users/mleza/Documents/Jobs/BioMan/Variablen/old/Hessen_shapes/"
gem_he <- readOGR(paste0(gem_he_path, "Gemeinden_Hessen_clean.shp"))
bev <- read.csv(list.files(path, pattern="_Bevoelkerung_2.csv", full.names = T),
sep=";", stringsAsFactors = F)
# replace , with . and save as numeric
for(i in seq(17)){
bev[,2+i] <- gsub(".", '', bev[,2+i], fixed = T)
bev[,2+i] <- as.numeric(gsub(",", '.', bev[,2+i], fixed = T))
}
bev$AGS <- as.factor(paste0("06",bev$AGS)) # add 06 for Hessen to code
# which position do codes have in two datasets?
match(gem_he$AGS_G, bev$AGS) # works!!
gem_he@data <- merge(gem_he@data, bev, by.x="AGS_G", by.y="AGS")
#clip to mh
bevclip <- intersect(gem_he, kreise)
# which are smaller than smallest Gemeinde?
pos <- which(area(bevclip)<area(bevclip[bevclip$GEN_G=="Heuchelheim",]))
realclip <- bevclip[is.na(match(seq(nrow(bevclip)), pos)),]
writeOGR(realclip, dsn=paste0(opp, "GemHe_Bevoelkerung_mh.shp"), driver="ESRI Shapefile",
layer="GemHe_Bevoelkerung_mh", overwrite=T)
t <- readOGR(paste0(main, "GemHe_Tourismus.shp"))
tourtest <- readOGR(paste0(opp, "GemHe_Tourismus.shp"))
tourtest@data
main <- "C:/Users/mleza/Documents/Jobs/BioMan/Variablen/mein_GIS/final_GIS_2/"
cpath <- "C:/Users/mleza/Documents/Jobs/BioMan/Variablen/corine/"
newproj <- "+proj=utm +zone=32 +ellps=GRS80 +units=m +no_defs"
kreise <- readOGR(paste0("C:/Users/mleza/Documents/Jobs/BioMan/Variablen/mein_GIS/final_GIS/",
"Kreise_comp.shp"))
# READ DATA
# corine <- raster(list.files(cpath, pattern="tif", full.names = T))
# kreise_corproj <- spTransform(kreise, crs(corine))
# r2 <- crop(corine, extent(kreise_corproj))
# corinem <- mask(r2, kreise_corproj)
# corineproj <- projectRaster(corinem, method="ngb", crs=newproj)
# writeRaster(corinem, paste0(main, "corine.tif"), format="GTiff", overwrite=T)
corine <- raster(paste0(main, "corine.tif"))
flaech <- readOGR(paste0(main, "GemHe_Flaechennutzung_mh.shp"))
lws <- readOGR(paste0(main, "GemHe_LWS_mh.shp"))
ee <- readOGR(paste0(main, "GemMiHe_EEnergieproduktion_mh.shp"))
tour <- readOGR(paste0(main, "GemHe_Tourismus.shp"))
# biomass
biomass <- corine
biomass[biomass!=c(16, 18, 23:27, 29)] <- NA # siehe Legenden-xls grün
biomass2 <- flaech[,c(1,4,37,38,41,42)] # ha und % Vegetation und Wald
# freshwater
freshwater <- corine
freshwater[freshwater!=c(35,36,41)] <- NA # siehe Legenden-xls blau
freshwater2 <- flaech[,c(1,4,43,44)]
# agricultural production
lwsp <- lws[,c(1,4,38:41, 55, 57, 58, 60)]
# (renewable) energy production
eep <- ee[,c(1,4,33,36,39,42,45,48,56)]
# recreation
rec <- corine
rec[rec!=c(10, 11, 23:27, 29, 35, 36, 41)] <- NA # siehe Legenden-xls orange
plot(rec)
rec2 <- tour[,c(1,4,32, 33)]
rec2
# save
indpath <- paste0(main, "ecosystem_services_index/")
# make data table
# extract data from corine biomass, freshwater and rec
extrcorine <- function(raster, shape, topic){
ex <- extract(raster, shape)
vals <- unique(raster[], na.rm=T)[order(unique(raster[], na.rm=T))]
vals <- vals[1:length(vals)-1]
vec <- lapply(seq(ex),function(i){
sapply(seq(vals), function(j){
x <- sum(ex[[i]]==vals[j], na.rm=T)
names(x) <- as.character(vals[j])
x
})
})
mat <- matrix(unlist(vec), ncol=length(vals), byrow=T)
df <- data.frame(mat)
names(df) <- paste0("c_", topic, "_" ,vals)
shape@data[,(ncol(shape)+1):(ncol(shape)+1+ncol(df))] <- df
return(shape)
}
biomasscorine <- extrcorine(raster=biomass, shape=biomass2, topic= "biom")
freshwatercorine <- extrcorine(raster=freshwater, shape=freshwater2, topic= "frshw")
reccorine <- extrcorine(raster=rec, shape=rec2, topic= "rec")
map <- mapview::mapview(flaech, zcol="Veget_p", burst=F, label=flaech$GEN_G, na.color="#e5e4e2",
legend=T, layer.name="vegetation_percent")
map
mapview::mapview(biomasscorine, zcol="Veget_p", burst=F, label=flaech$GEN_G, na.color="#e5e4e2",
legend=T, layer.name="vegetation_percent")
biomasscorine@data
names(biomasscorine)
mapview::mapview(biomasscorine, zcol="c_biom_16", burst=F, label=flaech$GEN_G, na.color="#e5e4e2",
legend=T, layer.name="vegetation_percent")
esip <- paste0(main, "ecosystem_services_index/")
esip
writeOGR(biomasscorine, dsn=paste0(esip, "biomasscorine.shp"), driver="ESRI Shapefile",
layer="biomasscorine", overwrite=T)
writeOGR(freshwatercorine, dsn=paste0(esip, "freshwatercorine.shp"), driver="ESRI Shapefile",
layer="freshwatercorine", overwrite=T)
writeOGR(reccorine, dsn=paste0(esip, "reccorine.shp"), driver="ESRI Shapefile",
layer="reccorine", overwrite=T)
match(biomasscorine$AGS_G, freshwatercorine$AGS) # works!!
biomasscorine$AGS_G
freshwatercorine$AGS
freshwatercorine
match(biomasscorine$AGS_G, freshwatercorine$AGS_G) # works!!
matched <- merge(biomasscorine@data, freshwatercorine@data, by.x="AGS_G", by.y="AGS_G")
provisioning <- biomasscorine
provisioning@data <- matched
match(biomasscorine$AGS_G, reccorine$AGS_G) # works!!
matched2 <- merge(provisioning@data, reccorine@data, by.x="AGS_G", by.y="AGS_G")
provisioning@data <- matched2
names(provisioning@data)
View(provisioning)
writeOGR(provisioning, dsn=paste0(esip, "provisioning.shp"), driver="ESRI Shapefile",
layer="provisioning", overwrite=T)
writeOGR(ess, dsn=paste0(esip, "ecosystem_services.shp"), driver="ESRI Shapefile",
layer="ecosystem_services", overwrite=T)
ess <- biomasscorine
match(biomasscorine$AGS_G, reccorine$AGS_G) # works!!
matched <- merge(biomasscorine@data, freshwatercorine@data, by.x="AGS_G", by.y="AGS_G")
ess@data <- matched
matched2 <- merge(ess@data, reccorine@data, by.x="AGS_G", by.y="AGS_G")
ess@data <- matched2
writeOGR(ess, dsn=paste0(esip, "ecosystem_services.shp"), driver="ESRI Shapefile",
layer="ecosystem_services", overwrite=T)
names(ess)
ess$Gwssr_h
ess$Wald_ha
ess$Veget_h
ess$Wald_ha + ess$Veget_h # biomass
lwsp
lwsp <- lws[,c(1,4,38:41, 55, 57, 58, 60)]
eep <- ee[,c(1,4,33,36,39,42,45,48,56)]
lwsp@data
matched3 <- merge(ess@data, lwsp@data, by.x="AGS_G", by.y="AGS_G")
matched3
lwsp$oekol_h # ökol. Landbau ha
lwsp$Gtr_nsg + lwsp$Vieh_gs # agricultural production: Getreide gesamt, Vieh_gs
names(ess)
ess$mn_fnt_
ess$ubrncht # übernachtungen in Gemeinde
ess$Wald_ha + ess$Veget_h + ess$Gwssr_h
ess$Wald_p + ess$Veget_p + ess$Gwssr_p
(ess$Wald_p + ess$Veget_p + ess$Gwssr_p)/3
eep$WindkWh + eep$Bim_kWh + eep$Bgs_kWh + eep$Fstb_kW_1 +eep$Wssr_kW_1 + eep$Phtv__W
data.frame(eep$WindkWh,eep$Bim_kWh,eep$Bgs_kWh,eep$Fstb_kW_1,eep$Wssr_kW_1,eep$Phtv__W)
data.frame(eep$GEN_G, eep$WindkWh,eep$Bim_kWh,eep$Bgs_kWh,eep$Fstb_kW_1,eep$Wssr_kW_1,eep$Phtv__W)
data.frame(eep$AGS_G,eep$GEN_G, eep$WindkWh,eep$Bim_kWh,eep$Bgs_kWh,eep$Fstb_kW_1,eep$Wssr_kW_1,eep$Phtv__W)
ee <- data.frame(eep$AGS_G,eep$GEN_G, eep$WindkWh,eep$Bim_kWh,eep$Bgs_kWh,eep$Fstb_kW_1,eep$Wssr_kW_1,eep$Phtv__W)
ee
ee[is.na(ee)]
ee[is.na(ee)] <- 0
ee
match(ess$AGS_G, ee$AGS_G) # works!!
match(ess$AGS_G, ee$eep.AGS_G) # works!!
matched <- merge(ess@data, ee, by.x="AGS_G", by.y="eep.AGS_G")
ess@data <- matched
ess@data
View(ess)
names(ess)
rowSums(ess@data[,39:44])
ess$rnw_kWh <- rowSums(ess@data[,39:44])
mapview::mapview(ess, zcol="rnw_kWh", burst=F, label=flaech$GEN_G, na.color="#e5e4e2",
legend=T, layer.name="renewable_energ_sum")
44-39
match(ess$AGS_G, lwsp$AGS_G) # works!!
matched <- merge(ess@data, lwsp@data, by.x="AGS_G", by.y="AGS_G")
ess@data <- matched
ess@data
# make one shapefile for all ess relevant variables
ess <- biomasscorine
match(ess$AGS_G, lwsp$AGS_G) # works!!
matched <- merge(ess@data, freshwatercorine@data, by.x="AGS_G", by.y="AGS_G")
ess@data <- matched
matched2 <- merge(ess@data, reccorine@data, by.x="AGS_G", by.y="AGS_G")
ess@data <- matched2
# Gesamtproduktion erneuerbare Energien in kWh
ee <- data.frame(eep$AGS_G,eep$GEN_G, eep$WindkWh,eep$Bim_kWh,eep$Bgs_kWh,eep$Fstb_kW_1,eep$Wssr_kW_1,eep$Phtv__W)
ee[is.na(ee)] <- 0
match(ess$AGS_G, ee$eep.AGS_G) # works!!
matched <- merge(ess@data, ee, by.x="AGS_G", by.y="eep.AGS_G")
ess@data <- matched
matched <- merge(ess@data, lwsp@data, by.x="AGS_G", by.y="AGS_G")
ess@data <- matched
writeOGR(ess, dsn=paste0(esip, "ecosystem_services.shp"), driver="ESRI Shapefile",
layer="ecosystem_services", overwrite=T)
names(ess)
writeOGR(ess, dsn=paste0(esip, "ecosystem_services.shp"), driver="ESRI Shapefile",
layer="ecosystem_services", overwrite=T)
?writeOGR
writeOGR(ess, dsn=paste0(esip, "ecosystem_services_2.shp"), driver="ESRI Shapefile",
layer="ecosystem_services", overwrite=T)
names(ess)
table(unique(names(ess)))
which(table(unique(names(ess))))>1
names(ess)
names(ess) <- names(ess)
writeOGR(ess, dsn=paste0(esip, "ecosystem_services_2.shp"), driver="ESRI Shapefile",
layer="ecosystem_services", overwrite=T)
names(ess) <- substring(names(ess), 1,8)
names(ess)
writeOGR(ess, dsn=paste0(esip, "ecosystem_services_2.shp"), driver="ESRI Shapefile",
layer="ecosystem_services", overwrite=T)
esip
paste0(esip, "ecosystem_services_2.shp")
main <- "C:/Users/mleza/Documents/Jobs/BioMan/Variablen/mein_GIS/final_GIS_2/"
cpath <- "C:/Users/mleza/Documents/Jobs/BioMan/Variablen/corine/"
newproj <- "+proj=utm +zone=32 +ellps=GRS80 +units=m +no_defs"
esip <- paste0(main, "ecosystem_services_index/")
kreise <- readOGR(paste0("C:/Users/mleza/Documents/Jobs/BioMan/Variablen/mein_GIS/final_GIS/",
"Kreise_comp.shp"))
# READ DATA
# corine <- raster(list.files(cpath, pattern="tif", full.names = T))
# kreise_corproj <- spTransform(kreise, crs(corine))
# r2 <- crop(corine, extent(kreise_corproj))
# corinem <- mask(r2, kreise_corproj)
# corineproj <- projectRaster(corinem, method="ngb", crs=newproj)
# writeRaster(corinem, paste0(main, "corine.tif"), format="GTiff", overwrite=T)
corine <- raster(paste0(main, "corine.tif"))
flaech <- readOGR(paste0(main, "GemHe_Flaechennutzung_mh.shp"))
lws <- readOGR(paste0(main, "GemHe_LWS_mh.shp"))
ee <- readOGR(paste0(main, "GemMiHe_EEnergieproduktion_mh.shp"))
tour <- readOGR(paste0(main, "GemHe_Tourismus.shp"))
# PROVISIONING
# biomass
biomass <- corine
biomass[biomass!=c(16, 18, 23:27, 29)] <- NA # siehe Legenden-xls grün
biomass2 <- flaech[,c(1,4,37,38,41,42)] # ha und % Vegetation und Wald
# freshwater
freshwater <- corine
freshwater[freshwater!=c(35,36,41)] <- NA # siehe Legenden-xls blau
freshwater2 <- flaech[,c(1,4,43,44)]
# agricultural production
lwsp <- lws[,c(1,4,38:41, 55, 57, 58, 60)]
# (renewable) energy production
eep <- ee[,c(1,4,33,36,39,42,45,48,56)]
# REGULATING
# erosion control due to vegetation: see biomass
# carbon storage biomass & soil: invekos?
# CULTURAL
# recreation
rec <- corine
rec[rec!=c(10, 11, 23:27, 29, 35, 36, 41)] <- NA # siehe Legenden-xls orange
plot(rec)
rec2 <- tour[,c(1,4,32, 33)]
rec2
# extract data from corine biomass, freshwater and rec
extrcorine <- function(raster, shape, topic){
ex <- extract(raster, shape)
vals <- unique(raster[], na.rm=T)[order(unique(raster[], na.rm=T))]
vals <- vals[1:length(vals)-1]
vec <- lapply(seq(ex),function(i){
sapply(seq(vals), function(j){
x <- sum(ex[[i]]==vals[j], na.rm=T)
names(x) <- as.character(vals[j])
x
})
})
mat <- matrix(unlist(vec), ncol=length(vals), byrow=T)
df <- data.frame(mat)
names(df) <- paste0("c_", topic, "_" ,vals)
shape@data[,(ncol(shape)+1):(ncol(shape)+1+ncol(df))] <- df
return(shape)
}
biomasscorine <- extrcorine(raster=biomass, shape=biomass2, topic= "biom")
freshwatercorine <- extrcorine(raster=freshwater, shape=freshwater2, topic= "frshw")
reccorine <- extrcorine(raster=rec, shape=rec2, topic= "rec")
# write all provisioning layers
writeOGR(biomasscorine, dsn=paste0(esip, "biomasscorine.shp"), driver="ESRI Shapefile",
layer="biomasscorine", overwrite=T)
writeOGR(freshwatercorine, dsn=paste0(esip, "freshwatercorine.shp"), driver="ESRI Shapefile",
layer="freshwatercorine", overwrite=T)
writeOGR(reccorine, dsn=paste0(esip, "reccorine.shp"), driver="ESRI Shapefile",
layer="reccorine", overwrite=T)
# view with mapview
map <- mapview::mapview(flaech, zcol="Veget_p", burst=F, label=flaech$GEN_G, na.color="#e5e4e2",
legend=T, layer.name="vegetation_percent")
mapview::mapview(biomasscorine, zcol="c_biom_16", burst=F, label=flaech$GEN_G, na.color="#e5e4e2",
legend=T, layer.name="vegetation_percent")
# make one shapefile for all ess relevant variables
ess <- biomasscorine
match(ess$AGS_G, lwsp$AGS_G) # works!!
matched <- merge(ess@data, freshwatercorine@data, by.x="AGS_G", by.y="AGS_G")
ess@data <- matched
matched2 <- merge(ess@data, reccorine@data, by.x="AGS_G", by.y="AGS_G")
ess@data <- matched2
# Gesamtproduktion erneuerbare Energien in kWh
ee <- data.frame(eep$AGS_G,eep$GEN_G, eep$WindkWh,eep$Bim_kWh,eep$Bgs_kWh,eep$Fstb_kW_1,eep$Wssr_kW_1,eep$Phtv__W)
ee[is.na(ee)] <- 0
match(ess$AGS_G, ee$eep.AGS_G) # works!!
matched <- merge(ess@data, ee, by.x="AGS_G", by.y="eep.AGS_G")
ess@data <- matched
matched <- merge(ess@data, lwsp@data, by.x="AGS_G", by.y="AGS_G")
ess@data <- matched
names(ess) <- substring(names(ess), 1,8)
writeOGR(ess, dsn=paste0(esip, "ecosystem_services_2.shp"), driver="ESRI Shapefile",
layer="ecosystem_services", overwrite=T)
names(ess) <- paste0(seq(1:126), substring(names(ess), 1,4))
names(ess)
names(ess) <- paste0(seq(1:length(names(ess))), substring(names(ess), 1,4))
writeOGR(ess, dsn=paste0(esip, "ecosystem_services_2.shp"), driver="ESRI Shapefile",
layer="ecosystem_services", overwrite=T)
names(ess)
ess_new <- readOGR(paste0(esip, "ecosystem_services_2.shp"))
View(ess_new)
essnew <- ess
# make one shapefile for all ess relevant variables
ess <- biomasscorine
match(ess$AGS_G, lwsp$AGS_G) # works!!
matched <- merge(ess@data, freshwatercorine@data, by.x="AGS_G", by.y="AGS_G")
ess@data <- matched
matched2 <- merge(ess@data, reccorine@data, by.x="AGS_G", by.y="AGS_G")
ess@data <- matched2
# Gesamtproduktion erneuerbare Energien in kWh
ee <- data.frame(eep$AGS_G,eep$GEN_G, eep$WindkWh,eep$Bim_kWh,eep$Bgs_kWh,eep$Fstb_kW_1,eep$Wssr_kW_1,eep$Phtv__W)
ee[is.na(ee)] <- 0
match(ess$AGS_G, ee$eep.AGS_G) # works!!
matched <- merge(ess@data, ee, by.x="AGS_G", by.y="eep.AGS_G")
ess@data <- matched
matched <- merge(ess@data, lwsp@data, by.x="AGS_G", by.y="AGS_G")
ess@data <- matched
ess@data
ess@data
ess$Gwssr_h # freshwater supply
ess$Wald_ha + ess$Veget_h # biomass supply
lwsp$Gtr_nsg + lwsp$Vieh_gs # agricultural production: Getreide gesamt, Vieh_gs
names(ess)
matched <- merge(eep@data, lwsp@data, by.x="AGS_G", by.y="AGS_G")
matched
nrow(matched)
eep@data
ess@data <- matched
ess$Gsmt_S_ # Gesamtstromproduktion
mapview::mapview(ess, zcol="Gsmt_S_", burst=F, label=flaech$GEN_G, na.color="#e5e4e2",
legend=T, layer.name="renewable_energ_sum")
mapview::mapview(ess, zcol="rnw_kWh", burst=F, label=flaech$GEN_G, na.color="#e5e4e2",
legend=T, layer.name="renewable_energ_sum")
ess@data[,39:44]
names(ess)
ess <- biomasscorine
match(ess$AGS_G, lwsp$AGS_G) # works!!
matched <- merge(ess@data, freshwatercorine@data, by.x="AGS_G", by.y="AGS_G")
ess@data <- matched
matched2 <- merge(ess@data, reccorine@data, by.x="AGS_G", by.y="AGS_G")
ess@data <- matched2
matched <- merge(eep@data, lwsp@data, by.x="AGS_G", by.y="AGS_G")
ess@data <- matched
names(ess)
ess <- biomasscorine
match(ess$AGS_G, lwsp$AGS_G) # works!!
matched <- merge(ess@data, freshwatercorine@data, by.x="AGS_G", by.y="AGS_G")
ess@data <- matched
matched2 <- merge(ess@data, reccorine@data, by.x="AGS_G", by.y="AGS_G")
ess@data <- matched2
matched3 <- merge(ess@data, lwsp@data, by.x="AGS_G", by.y="AGS_G")
ess@data <- matched3
matched4 <- merge(ess@data, eep@data, by.x="AGS_G", by.y="AGS_G")
ess@data <- matched4
names(ess)
ess$rnw_kWh <- rowSums(ess@data[,48:53])
mapview::mapview(ess, zcol="rnw_kWh", burst=F, label=flaech$GEN_G, na.color="#e5e4e2",
legend=T, layer.name="renewable_energ_sum")
ess$rnw_kWh <- rowSums(ess@data[,48:53], na.rm=T)
mapview::mapview(ess, zcol="rnw_kWh", burst=F, label=flaech$GEN_G, na.color="#e5e4e2",
legend=T, layer.name="renewable_energ_sum")
ess$mn_fnt_ # mittlere Aufenthaltsdauer Touristen
(ess$Wald_p + ess$Veget_p + ess$Gwssr_p)/3 # Anteil Wald, Vegetation und Gewässer
writeOGR(ess, dsn=paste0(esip, "ecosystem_services_2.shp"), driver="ESRI Shapefile",
layer="ecosystem_services", overwrite=T)
ess$Gwssr_h # freshwater supply
ess$Wald_ha + ess$Veget_h # biomass supply
sqrt(10000000)
sqrt(10000000)
corine
corine[1:4]
corine[600]
which(!is.na(corine[]))
corine[851]
corine[][851]
plot(corine)
e <- drawExtent()
sc <- crop(corine, e)
plot(sc)
area(sc)
sc[]
length(sc[])
540*540
area(sc)
area(sc)
area(sc[])
area(sc)
area(extent(sc))
?area
sc
raster:area(sc)
raster:area(sc, na.rm=T)
area(sc)
main <- "C:/Users/mleza/Documents/Jobs/BioMan/Variablen/mein_GIS/final_GIS_2/"
cpath <- "C:/Users/mleza/Documents/Jobs/BioMan/Variablen/corine/"
newproj <- "+proj=utm +zone=32 +ellps=GRS80 +units=m +no_defs"
esip <- paste0(main, "ecosystem_services_index/")
kreise <- readOGR(paste0("C:/Users/mleza/Documents/Jobs/BioMan/Variablen/mein_GIS/final_GIS/",
"Kreise_comp.shp"))
# READ DATA
# corine <- raster(list.files(cpath, pattern="tif", full.names = T))
# kreise_corproj <- spTransform(kreise, crs(corine))
# r2 <- crop(corine, extent(kreise_corproj))
# corinem <- mask(r2, kreise_corproj)
# corineproj <- projectRaster(corinem, method="ngb", crs=newproj)
# writeRaster(corinem, paste0(main, "corine.tif"), format="GTiff", overwrite=T)
corine <- raster(paste0(main, "corine.tif"))
flaech <- readOGR(paste0(main, "GemHe_Flaechennutzung_mh.shp"))
lws <- readOGR(paste0(main, "GemHe_LWS_mh.shp"))
ee <- readOGR(paste0(main, "GemMiHe_EEnergieproduktion_mh.shp"))
tour <- readOGR(paste0(main, "GemHe_Tourismus.shp"))
library(rgdal)
library(raster)
main <- "C:/Users/mleza/Documents/Jobs/BioMan/Variablen/mein_GIS/final_GIS_2/"
cpath <- "C:/Users/mleza/Documents/Jobs/BioMan/Variablen/corine/"
newproj <- "+proj=utm +zone=32 +ellps=GRS80 +units=m +no_defs"
esip <- paste0(main, "ecosystem_services_index/")
kreise <- readOGR(paste0("C:/Users/mleza/Documents/Jobs/BioMan/Variablen/mein_GIS/final_GIS/",
"Kreise_comp.shp"))
# READ DATA
# corine <- raster(list.files(cpath, pattern="tif", full.names = T))
# kreise_corproj <- spTransform(kreise, crs(corine))
# r2 <- crop(corine, extent(kreise_corproj))
# corinem <- mask(r2, kreise_corproj)
# corineproj <- projectRaster(corinem, method="ngb", crs=newproj)
# writeRaster(corinem, paste0(main, "corine.tif"), format="GTiff", overwrite=T)
corine <- raster(paste0(main, "corine.tif"))
flaech <- readOGR(paste0(main, "GemHe_Flaechennutzung_mh.shp"))
lws <- readOGR(paste0(main, "GemHe_LWS_mh.shp"))
ee <- readOGR(paste0(main, "GemMiHe_EEnergieproduktion_mh.shp"))
tour <- readOGR(paste0(main, "GemHe_Tourismus.shp"))
# PROVISIONING
# biomass
biomass <- corine
biomass[biomass!=c(16, 18, 23:27, 29)] <- NA # siehe Legenden-xls grün
biomass2 <- flaech[,c(1,4,37,38,41,42)] # ha und % Vegetation und Wald
# freshwater
freshwater <- corine
freshwater[freshwater!=c(35,36,41)] <- NA # siehe Legenden-xls blau
freshwater2 <- flaech[,c(1,4,43,44)]
corine <- raster(paste0(main, "corine.tif"))
library(raster)
library(rgdal)
library(raster)
